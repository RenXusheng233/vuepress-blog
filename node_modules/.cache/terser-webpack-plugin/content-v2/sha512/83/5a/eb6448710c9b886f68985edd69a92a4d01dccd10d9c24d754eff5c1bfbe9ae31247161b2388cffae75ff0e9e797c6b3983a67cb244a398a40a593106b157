{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{353:function(t,s,a){\"use strict\";a.r(s);var n=a(42),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"数据结构\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据结构\"}},[t._v(\"#\")]),t._v(\" 数据结构\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"前言\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前言\"}},[t._v(\"#\")]),t._v(\" 前言\")]),t._v(\" \"),a(\"p\",[t._v(\"首先从基础开始，一步一步慢慢来。\")]),t._v(\" \"),a(\"p\",[t._v(\"你想要的，时间都会给你。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"参考资料\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考资料\"}},[t._v(\"#\")]),t._v(\" 参考资料\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"掘金小册 - 前端算法与数据结构面试：底层逻辑解读与大厂真题训练，作者修言。\")]),t._v(\" \"),a(\"li\",[t._v(\"个人觉得作者的小册质量都非常高，非常值得购买阅读。\")])]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"h2\",{attrs:{id:\"javascript中常用数据结构\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#javascript中常用数据结构\"}},[t._v(\"#\")]),t._v(\" javascript中常用数据结构\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"数组\")]),t._v(\" \"),a(\"li\",[t._v(\"栈\")]),t._v(\" \"),a(\"li\",[t._v(\"队列\")]),t._v(\" \"),a(\"li\",[t._v(\"链表\")]),t._v(\" \"),a(\"li\",[t._v(\"树\")])]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"h2\",{attrs:{id:\"数组\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数组\"}},[t._v(\"#\")]),t._v(\" 数组\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"数组创建\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数组创建\"}},[t._v(\"#\")]),t._v(\" 数组创建\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" arr \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" arr \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Array\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" arr \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Array\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" arr \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Array\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"fill\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// [1, 1, 1]\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"数组的访问和遍历\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数组的访问和遍历\"}},[t._v(\"#\")]),t._v(\" 数组的访问和遍历\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"for\")]),t._v(\"循环\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"forEach\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"map\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"二维数组\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二维数组\"}},[t._v(\"#\")]),t._v(\" 二维数组\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"实际上就是数组套数组\")]),t._v(\" \"),a(\"li\",[t._v(\"二维数组的别称就是矩阵\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"二维数组的创建\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二维数组的创建\"}},[t._v(\"#\")]),t._v(\" 二维数组的创建\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" len \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" arr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" len\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  arr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"二维数组的遍历\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二维数组的遍历\"}},[t._v(\"#\")]),t._v(\" 二维数组的遍历\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"两层\"),a(\"code\",[t._v(\"for\")]),t._v(\"循环\")]),t._v(\" \"),a(\"li\",[t._v(\"几维数组就搞几层\"),a(\"code\",[t._v(\"for\")]),t._v(\"循环\")])]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"h2\",{attrs:{id:\"栈和队列\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#栈和队列\"}},[t._v(\"#\")]),t._v(\" 栈和队列\")]),t._v(\" \"),a(\"p\",[t._v(\"在javascript中，栈和队列可以看作是\"),a(\"strong\",[t._v(\"特别的数组\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"栈-stack-只用pop和push完成增删的数组\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#栈-stack-只用pop和push完成增删的数组\"}},[t._v(\"#\")]),t._v(\" 栈 - Stack - 只用pop和push完成增删的数组\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"FILO - first in last out\")]),t._v(\" \"),a(\"li\",[t._v(\"尾部添加元素，尾部移除元素\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"队列-queue-只用shift和push完成增删的数组\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#队列-queue-只用shift和push完成增删的数组\"}},[t._v(\"#\")]),t._v(\" 队列 - Queue - 只用shift和push完成增删的数组\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"FIFO - first in first out\")]),t._v(\" \"),a(\"li\",[t._v(\"尾部添加元素，头部移除元素\")])]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"h2\",{attrs:{id:\"链表🌟\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#链表🌟\"}},[t._v(\"#\")]),t._v(\" 链表🌟\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"和数组类似，都是有序的列表，都是线性结构\")]),t._v(\" \"),a(\"li\",[t._v(\"有且仅有一个前驱节点，有且仅有一个后继节点\")]),t._v(\" \"),a(\"li\",[t._v(\"数据单位是\"),a(\"strong\",[t._v(\"节点\")]),t._v(\"，在内存中可以是离散的\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 数据域\")]),t._v(\"\\n  val\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 指针域\")]),t._v(\"\\n  next\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    val\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    next\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 初始化一个链表\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"listNode\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"val\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"val \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" val\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 创建\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" node \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"listNode\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nnode\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"listNode\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"链表元素的添加-删除\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#链表元素的添加-删除\"}},[t._v(\"#\")]),t._v(\" 链表元素的添加 & 删除\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" node1 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"listNode\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nnode1\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"listNode\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 在节点1, 2之间添加节点3\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" node3 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"listNode\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nnode3\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" node1\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"next\\nnode1\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" node3\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 删除节点3\")]),t._v(\"\\nnode1\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" node3\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"next\\n\")])])]),a(\"blockquote\",[a(\"p\",[t._v(\"涉及链表删除操作时，要定位的不是目标节点，而是要定位目标节点的前驱节点\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"const target = node1.next\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"node1.next = target.next\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"链表与数组对比\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#链表与数组对比\"}},[t._v(\"#\")]),t._v(\" 链表与数组对比\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"首先，js中的数组不一定是真正数组 - 真正的数组是储存在连续的内存空间里的\\n\"),a(\"blockquote\",[a(\"p\",[a(\"code\",[t._v(\"[1, 2, 3, 4]\")]),t._v(\" - 连续的内存空间 - 🉑️\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"[1, {a: 1}, 'haha']\")]),t._v(\" - 并不连续 - 不🉑️\")])])]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"链表\")]),t._v(\"在数据\"),a(\"strong\",[t._v(\"增删\")]),t._v(\"中具有更少的开销 - 时间复杂度O(1)\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"数组\")]),t._v(\"在数据\"),a(\"strong\",[t._v(\"访问\")]),t._v(\"中具有更少的开销 - 时间复杂度O(1)\")])])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}