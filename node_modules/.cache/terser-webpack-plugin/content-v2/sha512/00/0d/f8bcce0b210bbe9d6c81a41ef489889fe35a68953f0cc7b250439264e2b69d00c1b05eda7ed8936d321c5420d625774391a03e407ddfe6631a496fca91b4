{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{352:function(t,a,s){\"use strict\";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"interview-fragments\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#interview-fragments\"}},[t._v(\"#\")]),t._v(\" Interview, Fragments\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"前言\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前言\"}},[t._v(\"#\")]),t._v(\" 前言\")]),t._v(\" \"),s(\"p\",[t._v(\"最近在考虑换工作的事情，所以学习内容的更新暂缓，刷一刷面试题找找感觉。\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"参考资料\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考资料\"}},[t._v(\"#\")]),t._v(\" 参考资料\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"https://juejin.im/post/6844904151369908232\")]),t._v(\" \"),s(\"li\",[t._v(\"https://github.com/LinDaiDai/niubility-coding-js/blob/master/2020%E9%9D%A2%E8%AF%95%E7%B3%BB%E5%88%97/%E9%9C%96%E5%91%86%E5%91%86%E7%9A%84%E8%BF%91%E6%9C%9F%E4%B8%AD%E5%A4%A7%E5%8E%82%E9%9D%A2%E8%AF%95%E6%B1%87%E6%80%BB(%E5%90%AB%E8%B6%85%E8%AF%A6%E7%BB%86%E7%AD%94%E6%A1%88).md\")]),t._v(\" \"),s(\"li\",[t._v(\"https://github.com/LinDaiDai/niubility-coding-js/blob/master/%E6%A1%86%E6%9E%B6-%E5%BA%93/Vue/Vue%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E7%90%86.md\")])]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h2\",{attrs:{id:\"就这样直接开始吧\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#就这样直接开始吧\"}},[t._v(\"#\")]),t._v(\" 就这样直接开始吧\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"love-hate-原则\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#love-hate-原则\"}},[t._v(\"#\")]),t._v(\" LoVe HAte 原则\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"link, visited, hover, active\")])]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"vue-hash-history\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue-hash-history\"}},[t._v(\"#\")]),t._v(\" Vue - hash, history\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"hash\")]),t._v(\": \"),s(\"code\",[t._v(\"onhashchange\")]),t._v(\" - \"),s(\"code\",[t._v(\"location.hash\")])]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"history\")]),t._v(\": \"),s(\"code\",[t._v(\"pushState\")]),t._v(\"、\"),s(\"code\",[t._v(\"replaceState\")])]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"数组去重\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数组去重\"}},[t._v(\"#\")]),t._v(\" 数组去重\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-javascript extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" arr \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\nArray\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"fromj\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Set\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"arr\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Set\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"arr\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 遍历 - indexOf, includes\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 排序后比较前后 - sort\")]),t._v(\"\\n\")])])]),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"promise\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#promise\"}},[t._v(\"#\")]),t._v(\" Promise\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"finally\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#finally\"}},[t._v(\"#\")]),t._v(\" finally\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\".finally()\")]),t._v(\"方法的回调函数不接受任何参数，因为不知道状态是\"),s(\"code\",[t._v(\"resolved\")]),t._v(\"还是\"),s(\"code\",[t._v(\"rejected\")])]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\".finally()\")]),t._v(\"返回的是上一次Promise对象值，如果上一次是抛出了一个异常，则返回异常的\"),s(\"code\",[t._v(\"Promise\")]),t._v(\"对象\")])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"all-race\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#all-race\"}},[t._v(\"#\")]),t._v(\" all, race\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\".all()\")]),t._v(\"接收一组异步任务，并行执行，并且在全部异步操作执行完毕后执行回调\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"Promise.all().then()\")]),t._v(\"结果中数组的顺序与入参顺序一致\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\".race()\")]),t._v(\"接收一组异步任务，并行执行，只保留第一个完成的异步操作结果，其他异步任务仍在执行，但结果会被抛弃\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\".all() & .race()\")]),t._v(\" - 只有最先抛出的异常会被捕获，不会影响数组中的其他异步任务\")])]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"event-loop\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#event-loop\"}},[t._v(\"#\")]),t._v(\" Event Loop\")]),t._v(\" \"),s(\"p\",[t._v(\"宏任务 -> 微任务 -> 渲染 -> \"),s(\"strong\",[t._v(\"web worker\")]),t._v(\" -> 宏任务...\")]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"addeventlistener-第三个参数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#addeventlistener-第三个参数\"}},[t._v(\"#\")]),t._v(\" addEventListener 第三个参数\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"true\")]),t._v(\" - 捕获\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"false\")]),t._v(\" - 冒泡\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"{once: true/false}\")]),t._v(\" - 添加之后最多只调用一次\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"{passive: true/false}\")]),t._v(\" - \"),s(\"code\",[t._v(\"listener\")]),t._v(\"永远不会调用\"),s(\"code\",[t._v(\"preventDefault()\")])])]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"没有冒泡的事件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#没有冒泡的事件\"}},[t._v(\"#\")]),t._v(\" 没有冒泡的事件\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"onblur, onfocus, onmouseenter, onmouseleave\")])]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"手写new\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#手写new\"}},[t._v(\"#\")]),t._v(\" 手写new\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-javascript extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"myNew\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"fn\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"args\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" instance \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" Object\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"create\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"fn\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" result \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"fn\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"call\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"instance\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"args\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" result \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'object'\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),t._v(\" result \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" instance\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"instanceof\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#instanceof\"}},[t._v(\"#\")]),t._v(\" instanceof\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"instanceof\")]),t._v(\"主要用于判断某个构造函数的原型对象在不在某个对象的原型链上\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-javascript extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"myInstance\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"left\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" right\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" proto \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" Object\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getPrototypeOf\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"left\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"while\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"proto \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"proto \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" right\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),t._v(\"\\n    proto \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" Object\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getPrototypeOf\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"proto\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"tcp-udp\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tcp-udp\"}},[t._v(\"#\")]),t._v(\" TCP & UDP\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"TCP\")]),t._v(\"是面向连接的、可靠的、基于字节流的传输层协议\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"UDP\")]),t._v(\"是面向无连接的传输层协议 - 手游、直播\")])]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"h3\",{attrs:{id:\"从输入一个url到页面渲染的流程\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#从输入一个url到页面渲染的流程\"}},[t._v(\"#\")]),t._v(\" 从输入一个url到页面渲染的流程\")]),t._v(\" \"),s(\"p\",[t._v(\"** \"),s(\"code\",[t._v(\"DNS\")]),t._v(\"解析 - 获取\"),s(\"code\",[t._v(\"IP\")]),t._v(\" - 浏览器/本地\"),s(\"code\",[t._v(\"hosts\")]),t._v(\"文件/本地\"),s(\"code\",[t._v(\"DNS\")]),t._v(\"服务器查询是否有缓存过\")]),t._v(\" \"),s(\"p\",[t._v(\"** \"),s(\"code\",[t._v(\"TCP/IP\")]),t._v(\"连接 - 三次握手 - 为什么两次不行？\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"客户端：我可以请求数据吗？\")]),t._v(\" \"),s(\"p\",[t._v(\"服务端：可以\")]),t._v(\" \"),s(\"p\",[t._v(\"客户端：好的\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"如果是两次握手的情况，客户端发送了请求，由于网络波动等原因延迟到达服务端\")]),t._v(\" \"),s(\"li\",[t._v(\"此时服务端建立连接，准备接收数据\")]),t._v(\" \"),s(\"li\",[t._v(\"客户端并不知道发生什么情况，造成服务端资源的浪费\")])]),t._v(\" \"),s(\"p\",[t._v(\"** 发送http请求 - 分为静态资源和动态资源\")]),t._v(\" \"),s(\"p\",[t._v(\"** 浏览器渲染 - \"),s(\"code\",[t._v(\"DOM, CSSOM -> render tree\")])]),t._v(\" \"),s(\"p\",[t._v(\"** 四次挥手 - 客户端没有数据要发送时断开连接，释放服务端资源\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"客户端：我没有数据要发送了，打算断开连接\")]),t._v(\" \"),s(\"p\",[t._v(\"服务端：你的请求我收到了，我这边还有数据没有发送完成，你等下\")]),t._v(\" \"),s(\"p\",[t._v(\"服务端：我的数据发送完毕了，可以断开连接了\")]),t._v(\" \"),s(\"p\",[t._v(\"客户端：👌，你断开连接吧（内心os：我会在2倍的最大报文段生存时间后关闭连接，如果再次收到服务端的消息，我就知道服务端没有收到我的这句话，我再发送一遍给它）\")]),t._v(\" \"),s(\"p\",[t._v(\"最终服务端收到客户端的消息断开连接，客户端也将连接关闭\")])])])}),[],!1,null,null,null);a.default=r.exports}}]);","extractedComments":[]}